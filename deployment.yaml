---
# 1. ConfigMap for nginx (overrides /etc/nginx/conf.d/default.conf)
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf-config
  namespace: player-xpress
data:
  default.conf: |
    server {
      listen 80;
      server_name _;

      # React build root
      root /usr/share/nginx/html;

      # 1) Serve /assets/* from the assets directory
      location /assets/ {
        alias /usr/share/nginx/html/assets/;
        expires 1y;
        access_log off;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
      }

      # 2) Also mirror under /composer-assets/*
      location /composer-assets/ {
        alias /usr/share/nginx/html/assets/;
        expires 1y;
        access_log off;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
      }

      # 3) Catch other static files just in case
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2)$ {
        expires 1y;
        access_log off;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
      }

      # 4) SPA fallback for everything else
      location / {
        try_files $uri $uri/ /index.html;
        add_header X-Content-Type-Options "nosniff";
      }

      # 5) No-cache for the HTML shell
      location = /index.html {
        expires -1;
        add_header Cache-Control "no-cache";
      }
    }

---
# 2. Deployment: xpressway-frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xpressway-frontend
  namespace: player-xpress
  labels:
    app: xpressway-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xpressway-frontend
  template:
    metadata:
      labels:
        app: xpressway-frontend
    spec:
      containers:
        - name: nginx
          image: registry.deti/player-xpress/xpressway-frontend:v4
          ports:
            - containerPort: 80
              name: http
          env:
            - name: VITE_BACKEND_URL
              value: "https://grupo3-egs-deti.ua.pt/xpressway/backend"
            - name: VITE_COMPOSER_URL
              value: "https://grupo3-egs-deti.ua.pt/"     # e.g. http://app-composer:9000
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-conf-config
            items:
              - key: default.conf
                path: default.conf
      # If you need imagePullSecrets, add them here
---
# 3. Service: xpressway-frontend
apiVersion: v1
kind: Service
metadata:
  name: xpressway-frontend
  namespace: player-xpress
spec:
  selector:
    app: xpressway-frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
  type: ClusterIP

---
# 4. Deployment: xpressway-backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xpressway-backend
  namespace: player-xpress
  labels:
    app: xpressway-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xpressway-backend
  template:
    metadata:
      labels:
        app: xpressway-backend
    spec:
      containers:
        - name: backend
          image: registry.deti/player-xpress/xpressway-backend:v1  # adjust tag as needed
          ports:
            - containerPort: 8002
              name: http
          env:
            - name: MONGO_CONN_STR
              value: "mongodb://mongodb-xpressway:27017"    # e.g. mongodb://mongodb-xpressway:27017
            - name: MONGO_DB
              value: "payments"
            - name: BACKEND_URL
              value: "${BACKEND_URL}"       # e.g. http://xpressway-backend:8002
            - name: FRONTEND_URL
              value: "${FRONTEND_URL}"
            - name: BACKEND_HOST
              value: "${BACKEND_HOST}"
            - name: BACKEND_PORT
              value: "${BACKEND_PORT}"
            - name: FRONTEND_HOST
              value: "${FRONTEND_HOST}"
            - name: FRONTEND_PORT
              value: "${FRONTEND_PORT}"
          envFrom:
            - configMapRef:
                name: flaskapp-config        # if you decide to reuse an existing ConfigMap
          # optionally add resources, readinessProbe/livenessProbe here
---
# 5. Service: xpressway-backend
apiVersion: v1
kind: Service
metadata:
  name: xpressway-backend
  namespace: player-xpress
spec:
  selector:
    app: xpressway-backend
  ports:
    - name: http
      port: 8002
      targetPort: 8002
  type: ClusterIP

---
# 6. Deployment: MongoDB
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-xpressway
  namespace: player-xpress
  labels:
    app: mongodb-xpressway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-xpressway
  template:
    metadata:
      labels:
        app: mongodb-xpressway
    spec:
      containers:
        - name: mongo
          image: mongo:8.0.9
          ports:
            - containerPort: 27017
              name: mongo
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-xpressway

---
# 7. Service: MongoDB
apiVersion: v1
kind: Service
metadata:
  name: mongodb-xpressway
  namespace: player-xpress
spec:
  selector:
    app: mongodb-xpressway
  ports:
    - name: mongo
      port: 27017
      targetPort: 27017
  type: ClusterIP

---
# 8. PersistentVolumeClaim for MongoDB
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-xpressway
  namespace: player-xpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
